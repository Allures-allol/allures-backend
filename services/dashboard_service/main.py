#services/dashboard_service/main.py
import sys
import os
import common.utils.env_loader

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø—É—Ç–∏ (–¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –æ–±—â–∏—Ö –º–æ–¥—É–ª–µ–π)
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "../../")))

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from sqlalchemy import text
from dotenv import load_dotenv

from services.dashboard_service.routers import dashboard
from common.db.session import get_db

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
app = FastAPI(title="Dashboard Service")

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "https://api.alluresallol.com",
        "https://alluresallol.com",
    ],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ REST-—Ä–æ—É—Ç–µ—Ä–∞
app.include_router(dashboard.router, prefix="/dashboard", tags=["Dashboard"])

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
@app.on_event("startup")
def startup_event():
    db_gen = get_db()
    db = next(db_gen)
    try:
        db.execute(text("SELECT 1"))
        print("‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ (Dashboard Service)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
    finally:
        db.close()

# –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
@app.get("/")
def root():
    return {"message": "Dashboard Service is running"}

# –°—Ç–∞—Ç–∏—á–Ω—ã–π summary endpoint ‚Äî –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ 422
@app.get("/dashboard/summary")
def get_summary():
    return {"summary": "Dashboard summary is working"}

# uvicorn services.dashboard_service.main:app --reload --port 8007
