# ‚úÖ services/review_service/main.py
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from common.db.base import Base
from services.review_service.api.routes import router
from services.review_service.db.database import engine  # –Ω—É–∂–µ–Ω –¥–ª—è bind –≤ create_all
from services.review_service.models import review, recommendation  # üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–ª–∏—Å—å

app = FastAPI(title="Review Service")

# üîì –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "https://allures-allol.com",
        "https://allures-frontend.vercel.app",
    ],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
@app.on_event("startup")
def on_startup():
    Base.metadata.create_all(bind=engine)

# üîó –†–æ—É—Ç—ã
app.include_router(router, prefix="/reviews", tags=["Reviews"])

# üåê –ö–æ—Ä–µ–Ω—å
@app.get("/")
def root():
    return {"message": "Review Service is running"}

# uvicorn services.review_service.main:app --reload --port 8002